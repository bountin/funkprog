Punkte pro Testfall: 2; 0; Maximum: 10 

Testfall: extract "we10iopK11P iU010" == "1011010"; Testfall OK 
Testfall: extract "0w0e010iopK101P iU01B1"  ; Testfall FALSCH 
Erwartet: extract "0w0e010iopK101P iU01B1" == "10101011" 
Ausgabe:  extract "0w0e010iopK101P iU01B1" =="00010101011"   
Testfall: extract "aerfweife" == "0"; Testfall OK 
Testfall: extract "a0erf00we0ife"  ; Testfall FALSCH 
Erwartet: extract "a0erf00we0ife" == "0" 
Ausgabe:  extract "a0erf00we0ife" =="0000"   
Testfall: extract "a0erf00w1e0ife"  ; Testfall FALSCH 
Erwartet: extract "a0erf00w1e0ife" == "10" 
Ausgabe:  extract "a0erf00w1e0ife" =="00010"   

Testfaelle OK: 2; Testfaelle FALSCH: 3
Punkte : 4

Punkte pro Testfall: 5; 0; Maximum: 15 

Testfall: [nbIncr i|i<-["110","10","1101","11111","11"]] == ["111","11","10","11100","0"]; Testfall OK 
Testfall: let i=6;b=take(2^i)['1'|_<-[1..]]in (nbIncr(b++"10"))==(b++"11"); Testfall OK 
Testfall: (iterate nbIncr "0")!!100 == "110100100"; Testfall OK 

Testfaelle OK: 3; Testfaelle FALSCH: 0
Punkte : 15

Punkte pro Testfall: 5; 0; Maximum: 25 

Testfall: [nbDecr i|i<-["1","1101","1110","11111","110"]] == ["0","1100","1001","11110","1"]; Testfall OK 
Testfall: let i=6;b=take(2^i)['1'|_<-[1..]]in (nbDecr(b++"11"))==(b++"10"); Testfall OK 
Testfall: let i=8;b=take(2^i)['1'|_<-[1..]]in(nbDecr.nbIncr)b==b; Testfall OK 
Testfall: let i=8;b=take(2^i)['1'|_<-[1..]]in(nbDecr.nbDecr.nbIncr.nbIncr)b==b; Testfall OK 
Testfall: [i|i<-["110","10","1101"],iterate nbDecr((iterate nbIncr i)!!90)!!90/=i]==[]; Testfall OK 

Testfaelle OK: 5; Testfaelle FALSCH: 0
Punkte : 25

Punkte pro Testfall: 5; 0; Maximum: 5 

Testfall: [nbAbs i|i<-["0","11","1111","111","1110"]]==["0","1","101","111","11010"]; Testfall OK 

Testfaelle OK: 1; Testfaelle FALSCH: 0
Punkte : 5

Punkte pro Testfall: 5; 0; Maximum: 45 

Testfall: [nbPlus x y|(x,y)<-[("0","1110"),("10101","0"),("110","111"),("10","1100"),("1100","101")]] == ["1110","10101","101","1110","1"]; Testfall OK 
Testfall: let n=9;p=nbPlus;l="":[c:e|e<-l,c<-"01"];k=take n("0":['1':j|j<-l])in take 5[(x,y,z)|x<-k,y<-k,z<-k,p x(p y z)/=p(p x y)z] == []; Testfall OK 
Testfall: let n=20;l="":[c:e|e<-l,c<-"01"];k=take n("0":['1':j|j<-l])in take 5[(x,y)|x<-k,y<-k,nbPlus x y/=nbPlus y x] == []; Testfall OK 
Testfall: let i= 5;b=take(2^i)['1'|_<-[1..]]in nbPlus"0"b==b; Testfall OK 
Testfall: [nbTimes x y|(x,y)<-[("0","1110"),("10101","0"),("10","1100"),("110","111"),("110","1101")]] == ["0","0","11000","11010","1110"]; Testfall OK 
Testfall: let i=10;b=take(2^i)['1'|_<-[1..]]in nbTimes"0" b=="0"; Testfall OK 
Testfall: let n=90;l="":[c:e|e<-l,c<-"01"];k=take n("0":['1':j|j<-l])in take 5[x|x<-k,nbTimes "0" x/="0"] == []; Testfall OK 
Testfall: let n=30;l="":[c:e|e<-l,c<-"01"];k=take n("0":['1':j|j<-l])in take 5[x|x<-k,nbTimes "1" x/=x] == []; Testfall OK 
Testfall: let n=11;l="":[c:e|e<-l,c<-"01"];k=take n("0":['1':j|j<-l])in take 5[(x,y)|x<-k,y<-k,nbTimes x y/=nbTimes y x] == []; Testfall OK 

Testfaelle OK: 9; Testfaelle FALSCH: 0
Punkte : 45

Punkte gesamt: 94

